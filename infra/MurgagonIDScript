import bpy
import random
import string

# ---------------------
# Generate unique ID
# ---------------------
def generate_unique_id(length=6):
    return "M." + ''.join(random.choices(string.ascii_uppercase + string.digits, k=length))

# ---------------------
# Create 3D Text Object
# ---------------------
def create_text_object(text, location=(0, 0, 0), extrusion=0.2):
    bpy.ops.object.text_add(location=location)
    text_obj = bpy.context.active_object
    text_obj.data.body = text
    text_obj.data.extrude = extrusion
    text_obj.name = "TextID"
    
    # Convert to mesh
    bpy.ops.object.convert(target='MESH')
    
    return text_obj

# ---------------------
# Get or create target object
# ---------------------
def get_or_create_target_object():
    target = bpy.data.objects.get("Murgagon")
    if target is None:
        bpy.ops.mesh.primitive_cube_add(size=2, location=(0, 0, 1))
        target = bpy.context.active_object
        target.name = "Murgagon"
    return target

# ---------------------
# Apply Boolean Modifier
# ---------------------
def apply_boolean_cut(target_obj, cutter_obj):
    bool_mod = target_obj.modifiers.new(name="TextIDCut", type='BOOLEAN')
    bool_mod.operation = 'DIFFERENCE'
    bool_mod.object = cutter_obj
    
    # Apply the modifier
    bpy.context.view_layer.objects.active = target_obj
    bpy.ops.object.modifier_apply(modifier=bool_mod.name)
    
    # Delete the cutter object
    bpy.data.objects.remove(cutter_obj, do_unlink=True)

# ---------------------
# Main
# ---------------------
def main():
    # Generate ID and create text
    unique_id = generate_unique_id()
    print(f"Generated ID: {unique_id}")
    
    text_obj = create_text_object(unique_id, location=(0, 0, 2))
    
    # Get target
    target_obj = get_or_create_target_object()
    
    # Apply boolean cut
    apply_boolean_cut(target_obj, text_obj)

# Run the main function
main()
